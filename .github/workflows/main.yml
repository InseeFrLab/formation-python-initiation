name: CI

on:
  push:
    branches: [ main ]

#  workflow_dispatch:
#
#jobs:
#  update-doc:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      
#      - uses: actions/setup-python@v2.3.0
#
#      - uses: actions/setup-node@v2.1.3
#
#      - name: Build doc
#        id: builddoc
#        run: |
#          pip install python-frontmatter
#          python utils/generate-doc.py
#          echo ::set-output name=doc::$(node -e 'console.log(JSON.stringify(process.argv[1]))' "$(cat doc.json)")
#          
#      - name: Dispatch doc
#        uses: peter-evans/repository-dispatch@v1
#        with:
#          token: ${{ secrets.PAT_FOR_DISPATCH }}
#          event-type: update_educational_resources
#          repository: InseeFrLab/www.sspcloud.fr
#          client-payload: '{ "educational_resource": ${{steps.builddoc.outputs.doc}} }'

jobs:
  update_educational_resources:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v2.1.3
    - id: step1
      run: |
        echo '{ "name": "foo", "abstract": "abc", "parts": [] }' > f.json
        echo ::set-output name=out::$(node -e 'console.log(JSON.stringify(process.argv[1]))' "$(cat f.json)")
    - uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.PAT_FOR_COMMIT }}
        event-type: update_educational_resources
        repository: InseeFrLab/www.sspcloud.fr
        client-payload: '{ "educational_resource": ${{steps.step1.outputs.out}} }'
